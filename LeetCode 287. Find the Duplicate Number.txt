class Solution {
    public int findDuplicate(int[] nums) {
        // // Brute Force Approach
        // for(int i=0; i<nums.length; i++)
        //     for(int j=i+1; j<nums.length; j++)
        //         if(nums[i]==nums[j])
        //             return nums[i];

        // // Naive Approach using Sorting
        // Arrays.sort(nums);
        // for(int i=0; i<nums.length; i++)
        // {
        //     if(nums[i]==nums[i+1])  return nums[i];
        // }
        // return -1;

        // Linked List slow-fast pointer approach
        int slow = nums[0];
        int fast = nums[0];

        do{
            slow = nums[slow];
            fast = nums[nums[fast]];
        }while(slow!= fast);

        fast = nums[0];
        while(slow!=fast)
        {
            slow = nums[slow];
            fast = nums[fast];
        }
        return slow;

        //Appart from this we can also have another approach by using an extra flag map array
    }
}