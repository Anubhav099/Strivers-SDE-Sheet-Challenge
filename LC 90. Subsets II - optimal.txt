class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> ans = new ArrayList<>();
        rec(0, nums, new ArrayList<>(), ans);
        return ans;
    }
    void rec(int ind, int[] nums, List<Integer> ds, List<List<Integer>> ansList) {
        ansList.add(new ArrayList<>(ds));
        for(int i = ind;i<nums.length;i++) 
        {
            if(i!=ind && nums[i] == nums[i-1]) continue; 
            ds.add(nums[i]); 
            rec(i+1, nums, ds, ansList); 
            ds.remove(ds.size() - 1);
        }
    }
}
// TC: O(2^n * n) SC: O(1)