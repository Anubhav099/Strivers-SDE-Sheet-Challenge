/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        Stack<Integer> stk = new Stack<>();
        
        ListNode dummy = head;
        int LLlen = 0;
        while(dummy != null)
        {
            LLlen +=1;
            dummy=dummy.next;
        }
        dummy = head;
        int i=1;
        while( dummy != null )
        {
            if(i <= LLlen/2)
            {
                stk.push(dummy.val);
                dummy = dummy.next;
                i++;
            }
            else if( LLlen%2==1 && i == (LLlen/2)+1 ){
                dummy = dummy.next;
                i++;
            }
            else
            {
                if( dummy.val != stk.pop() )
                    return false;
                dummy = dummy.next;
            }
        }
        return true;
    }
}
// TC: O(2n), SC: O(n/2)